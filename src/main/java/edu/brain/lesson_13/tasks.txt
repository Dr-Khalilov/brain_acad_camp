 1. Создать класс User (пользователь какой-то системы). Необходимые поля: login, password, name, role.
 2. Создать Enum описывающий должности работников интернет-магазина: директор администратор, менеджер, клиент, аноним.
 3. Заменить тип поля role на тип созданного Enum (по умолчанию поставить анонима).
 4. Создать класс Store c полями: имя магазина, URL магазина, массив всех пользователей магазина, авторизированный пользователь магазина.
 5. В классе Store создать метод login в который передается логин и пароль.
 • В методе необходимо найти пользователя у которого совпадают введенные и
       сохраненные логин и пароль и присвоить значение этого пользователя полю для авторизированного пользователя.
 • Если найден пользователь с таким логином и паролем возвращаем true.
 • Если не найден пользователь с таким логином и паролем возвращаем false.
 6. В классе Store создать метод void getCurrentUserRights(). В методе, определить
    текущую должность пользователя и вывести информацию об этом пользователе.
 7. В классе Store создать метод logout, в котором полю авторизированный пользователь
    присваивается null, и выводится сообщение: «Пользователь вышел из системы».
 8. Создать Main класс с main методом. В main методе создать 5 пользователей с разными должностями, логинами и паролями.
 9. В main методе создать экземпляр класса Store. Проинициализировать список пользователей, имя, url.
 10. В классе Main создать статический метод без возвращаемого значения tryLogin, в
     который, в качестве параметра передается ссылка на экземпляр класса Store.
 • В методе создать Scanner для приема логина пользователя (Предварительно нужно вывести сообщение: «Введите логин:»).
       Присвоить значение созданной строке login.
 • создать Scanner для приема пароля пользователя (Предварительно нужно вывести сообщение: «Введите пароль:»).
       Присвоить значение созданной строке password.
 • Вызвать метод login у параметра (Store), передав в него login и password.
 • Если метод вернул true: вызываем у store метод getCurrentUserRights и после него logout.
 • Если метод вернул false, выводим на экран сообщение: «Неверный логин и\или пароль».
 11. Вызвать метод tryLogin в main методе и обернуть его бесконечным циклом, для
     многоразового последовательного использования.
1.1 Создать класс ArrayExceptionTest.
1.2 Создать main метод.
1.3 Создать и проинициализировать произвольный массив из 5-6 элементов.
1.4 Создать статический метод printArray(array, start, end), который выводит на
   экран элементы массива от индекса start до индекса end.
1.5 Добавить обработку исключения ArrayIndexOutOfBoundsException, для операции получения элемента массива по индексу.
1.6 Вызвать несколько раз (с разными значениями) метод printArray в методе main для созданного ранее массива.

2. Использование throw
2.1 Создать класс MoneyTransactionUtil
2.2 Создать приватный конструктор
2.3 Создать статический метод для отправки денег с одного счета на другой: sendTo(номерКарты, номерКарты, сумма).
    В методе следует обработать несколько возможных исключительных ситуаций:
    • Если номер карты отправителя и карты получателя совпадают, нужно
    выбросить RuntimeException. (throw new RuntimeException()).
    • Если сумма является нулевой, отрицательной или больше 100_000,
    нужно выбросить RuntimeException. (throw new RuntimeException()).
    Добавить ключевое слово throws и RuntimeException к объявлению метода.
    Если исключительных ситуаций нет, вывести на экран: «Сумма s, со счета n успешно переведена на расчётный счёт m».

3. Создание собственных исключений.
 • Создать класс AccountException.
 • Наследовать класс AccountException от RuntimeException.
 • Создать класс MoneyValueException.
 • Наследовать класс MoneyValueException от RuntimeException.
 • Создать класс UserBank методом main.
 • В методе main вызвать метод sendTo().
 • Обернуть вызов метода блоком try…catch.
 • В блоке catch для RuntimeException вывести сообщение: «При обработке транзакции банка произошла ошибка».

4. В методе MoneyTransactionUtil.sendTo(…) сделать правки:
    • Если номер карты отправителя и карты получателя совпадают, нужно
      выбросить AccountException. (throw new AccountException ()).
    • Если сумма является нулевой, отрицательной или больше 100_000, нужно выбросить MoneyValueException.
    • Заменить для throws класс RuntimeException на новые исключения.

5. Проверить отсутствие ошибки в классе UserBank. Т. к. оба исключения имеют
      общего предка RuntimeException, они будут обрабатываться без ошибок.
    • Заменить один catch блок с RuntimeException на два: AccountException и MoneyValueException соответственно.
    • При AccountException вывести на экран текст: «Ошибка с реквизитами банка.
      Возможно, номер карты отправителя и получателя совпадают.»
    • При MoneyValueException вывести на экран текст: «Ошибка с суммой отправки.
      Сумма должна быть больше 0. Сумма не должна превышать лимит в 100_000».

4. Проверить работу Java Error.
   • Создать класс StackOverFlowTest.
   • Создать статическое поле int count.
   • Создать статический метод test(), в котором инкрементируется число count,
     выводится его значение на экран и снова вызывается test(). (Рекурсия).
   • Убедится в наличии ошибки при запуске программы.
   • Попробовать обернуть содержимое метода в блок try…catch.